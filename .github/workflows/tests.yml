name: tests
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request: { types: [opened, reopened, synchronize, ready_for_review] }
  push: { branches: [main] }

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        swift-image:
          - swiftlang/swift:nightly-6.0-jammy
          - swiftlang/swift:nightly-main-jammy

    runs-on: ubuntu-latest

    container: ${{ matrix.swift-image }}

    timeout-minutes: 30

    steps:
      - name: Check out ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Restore .build
        id: "restore-cache"
        uses: runs-on/cache/restore@v4
        with:
          path: .build
          # e.g. 'enumerator-macro-debug-build-swiftlang/swift:nightly-6.0-jammy-Linux-c7008df8062ac4d5887ead9e59aa05829e'
          key: "${{ github.event.repository.name }}-debug-build-${{ matrix.swift-image }}-${{ runner.os }}-${{ hashFiles('./Package.resolved') }}"
          restore-keys: "${{ github.event.repository.name }}-debug-build-${{ matrix.swift-image }}-${{ runner.os }}-"

      - name: Build ${{ github.event.repository.name }}
        run: swift build --build-tests

      - name: Cache .build
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: runs-on/cache/save@v4
        with:
          path: .build
          key: "${{ github.event.repository.name }}-debug-build-${{ matrix.swift-image }}-${{ runner.os }}-${{ hashFiles('./Package.resolved') }}"

      - name: Run tests
        run: swift test --enable-code-coverage --parallel

      - name: Submit code coverage
        uses: vapor/swift-codecov-action@v0.3
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
